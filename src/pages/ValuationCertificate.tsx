import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { useNavigate } from "react-router-dom";
import { Calculator, ArrowLeft, FileText } from "lucide-react";
import Header from "@/components/Header";
import Footer from "@/components/Footer";

export default function ValuationCertificate() {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    customerName: "",
    taxId: "",
    address: "",
    representative: "",
    position: "",
    propertyAddress: "",
    googleMapsLink: "",
    purpose: "",
    day: "",
    month: "",
    year: "2025"
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    console.log('üìã Valuation request submitted:', formData);
    
    // Save to local storage
    const valuationRequest = {
      id: Date.now().toString(),
      ...formData,
      submittedAt: new Date().toISOString(),
      status: 'pending'
    };
    
    const existingRequests = JSON.parse(localStorage.getItem('valuationRequests') || '[]');
    existingRequests.push(valuationRequest);
    localStorage.setItem('valuationRequests', JSON.stringify(existingRequests));
    
    console.log('‚úÖ Valuation request saved:', valuationRequest.id);
    
    alert("Y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c g·ª≠i cho ƒê·ªãnh gi√° ƒê·∫•t Vi·ªát ƒë·ªÉ x·ª≠ l√Ω!");
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-orange-50">
      <Header user={null} onLogout={() => {}} />
      
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-4xl mx-auto">
          <Card className="shadow-2xl border-0 bg-white/95 backdrop-blur-sm">
            <CardHeader className="text-center pb-6">
              <div className="mx-auto w-20 h-20 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center mb-4">
                <Calculator className="w-10 h-10 text-white" />
              </div>
              <CardTitle className="text-2xl font-bold text-gray-800">
                PHI·∫æU Y√äU C·∫¶U TH·∫®M ƒê·ªäNH GI√Å T√ÄI S·∫¢N
              </CardTitle>
            </CardHeader>
            
            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="text-center mb-6">
                  <p className="text-sm">K√≠nh g·ª≠i: C√¥ng ty C·ªï ph·∫ßn Th·∫©m ƒë·ªãnh gi√° v√† T∆∞ v·∫•n ƒë·∫ßu t∆∞ ƒê·∫•t Vi·ªát</p>
                  <p className="text-sm">(ƒê·ªãa ch·ªâ: 23 ƒë∆∞·ªùng 14, ph∆∞·ªùng T√¢n H∆∞ng, qu·∫≠n 7, TP. HCM)</p>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label>1. T√™n ƒë∆°n v·ªã/ kh√°ch h√†ng *</Label>
                    <Input 
                      value={formData.customerName}
                      onChange={(e) => setFormData({...formData, customerName: e.target.value})}
                    />
                  </div>
                  <div>
                    <Label>M√£ s·ªë thu·∫ø/CCCD *</Label>
                    <Input 
                      value={formData.taxId}
                      onChange={(e) => setFormData({...formData, taxId: e.target.value})}
                    />
                  </div>
                </div>

                <div>
                  <Label>ƒê·ªãa ch·ªâ *</Label>
                  <Input 
                    value={formData.address}
                    onChange={(e) => setFormData({...formData, address: e.target.value})}
                  />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label>Ng∆∞·ªùi ƒë·∫°i di·ªán</Label>
                    <Input 
                      value={formData.representative}
                      onChange={(e) => setFormData({...formData, representative: e.target.value})}
                    />
                  </div>
                  <div>
                    <Label>Ch·ª©c v·ª•</Label>
                    <Input 
                      value={formData.position}
                      onChange={(e) => setFormData({...formData, position: e.target.value})}
                    />
                  </div>
                </div>

                <div>
                  <Label>2. Nh√† ƒë·∫•t t·∫°i ƒë·ªãa ch·ªâ *</Label>
                  <Input 
                    value={formData.propertyAddress}
                    onChange={(e) => setFormData({...formData, propertyAddress: e.target.value})}
                  />
                </div>

                <div>
                  <Label>Link ƒë·ªãnh v·ªã t√†i s·∫£n Google Maps</Label>
                  <Input 
                    value={formData.googleMapsLink}
                    onChange={(e) => setFormData({...formData, googleMapsLink: e.target.value})}
                    placeholder="https://maps.google.com/..."
                  />
                </div>

                <div>
                  <Label>3. M·ª•c ƒë√≠ch th·∫©m ƒë·ªãnh gi√° *</Label>
                  <Textarea 
                    value={formData.purpose}
                    onChange={(e) => setFormData({...formData, purpose: e.target.value})}
                    rows={3}
                  />
                </div>

                <div className="bg-blue-50 p-4 rounded-lg">
                  <p className="text-sm text-gray-700 mb-2">
                    <strong>L∆∞u √Ω:</strong> Vui l√≤ng ƒë√≠nh k√®m h√¨nh ·∫£nh r√µ n√©t t·∫•t c·∫£ c√°c trang s·ªï ƒë·ªè, tr√≠ch l·ª•c (N·∫øu c√≥)
                  </p>
                  <p className="text-sm text-gray-600">
                    <strong>Cam k·∫øt:</strong> Sau khi nh·∫≠n Ch·ª©ng th∆∞ do Qu√Ω C√¥ng ty cung c·∫•p, ch√∫ng t√¥i s·∫Ω thanh to√°n Ph√≠ th·∫©m ƒë·ªãnh gi√° ƒë·∫ßy ƒë·ªß cho C√¥ng ty b·∫±ng ti·ªÅn m·∫∑t ho·∫∑c chuy·ªÉn kho·∫£n v√†o t√†i kho·∫£n c·ªßa C√¥ng ty.
                  </p>
                </div>

                <div className="flex flex-col sm:flex-row gap-4 justify-center pt-6">
                  <Button 
                    type="submit"
                    className="bg-gradient-to-r from-green-500 to-blue-500 hover:from-green-600 hover:to-blue-600 text-white px-8 py-3 rounded-xl"
                  >
                    <FileText className="w-5 h-5 mr-2" />
                    G·ª≠i cho ƒê·ªãnh gi√° ƒê·∫•t Vi·ªát
                  </Button>
                  
                  <Button 
                    type="button"
                    variant="outline"
                    onClick={() => navigate("/")}
                    className="border-2 border-gray-400 text-gray-600 hover:bg-gray-50 px-8 py-3 rounded-xl"
                  >
                    <ArrowLeft className="w-5 h-5 mr-2" />
                    V·ªÅ trang ch·ªß
                  </Button>
                </div>
              </form>
            </CardContent>
          </Card>
        </div>
      </div>
      
      <Footer />
    </div>
  );
}